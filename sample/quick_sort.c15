{"name":"quick_sort.c","value":"int array[] = {\r\n    55, 47, 35, 15, 20, 42,\r\n    52, 30, 58, 15, 13, 19,\r\n    32, 18, 44, 11, 7, 9,\r\n    34, 56, 17, 25, 14, 48,\r\n    40, 4, 5, 7, 36, 1,\r\n    33, 49, 25, 26, 30, 9\r\n};\r\n\r\nvoid swap(int i, int j) \r\n{\r\n    int temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n}\r\n\r\nint partition(int l, int h) \r\n{ \r\n    int x = array[h]; \r\n    int i = (l - 1); \r\n  \r\n    for (int j = l; j <= h - 1; j++) \r\n    { \r\n        if (array[j] <= x) \r\n        { \r\n            i++; \r\n            swap(i, j); \r\n        } \r\n    } \r\n    swap(i + 1, h); \r\n\r\n    return (i + 1); \r\n} \r\n\r\nvoid qsort(int l, int h) \r\n{ \r\n    _push(l);\r\n    _push(h);\r\n\r\n    int top = 2;\r\n  \r\n    while (top > 0) \r\n    { \r\n        h = _pop_int();\r\n        l = _pop_int();\r\n\r\n        top -= 2;\r\n \r\n        int p = partition(l, h); \r\n\r\n        if (p > 0 && p - 1 > l) \r\n        { \r\n            _push(l);\r\n            _push(p - 1);\r\n\r\n            top += 2;\r\n        } \r\n  \r\n        if (p + 1 < h) \r\n        { \r\n            _push(p + 1);\r\n            _push(h);\r\n\r\n            top += 2;\r\n        }  \r\n    }\r\n}\r\n\r\nqsort(0, array.length - 1);","script":true}