{"name":"tonelli_shanks.c","value":"// Credits to http://www.rosettacode.org/wiki/Tonelli-Shanks_algorithm#C\r\n\r\nuint modpow(uint a, uint b, uint n) \r\n{\r\n    uint x = 1u, y = a;\r\n\r\n    while (b > 0u) \r\n    {\r\n        if (b % 2u == 1u) {\r\n            x = (x * y) % n; // multiplying with base\r\n        }\r\n        y = (y * y) % n; // squaring the base\r\n        b /= 2u;\r\n    }\r\n\r\n    return x % n;\r\n}\r\n \r\nstruct Solution \r\n{\r\n    uint root1, root2;\r\n    uint exists;\r\n};\r\n\r\nSolution sol;\r\n \r\nvoid makeSolution(uint root1, uint root2, uint exists) \r\n{\r\n    sol.root1 = root1;\r\n    sol.root2 = root2;\r\n    sol.exists = exists;\r\n}\r\n \r\nvoid ts(uint n, uint p) \r\n{\r\n    uint q = p - 1u;\r\n    uint ss = 0u;\r\n    uint z = 2u;\r\n    uint c, r, t, m;\r\n \r\n    if (modpow(n, (p - 1u) / 2u, p) != 1u) {\r\n        return makeSolution(0u, 0u, 0u);\r\n    }\r\n \r\n    while ((q & 1u) == 0u) {\r\n        ss += 1u;\r\n        q >>= 1u;\r\n    }\r\n \r\n    if (ss == 1u) {\r\n        uint r1 = modpow(n, (p + 1u) / 4u, p);\r\n        return makeSolution(r1, p - r1, 1u);\r\n    }\r\n \r\n    while (modpow(z, (p - 1u) / 2u, p) != p - 1u) {\r\n        z++;\r\n    }\r\n \r\n    c = modpow(z, q, p);\r\n    r = modpow(n, (q + 1u) / 2u, p);\r\n    t = modpow(n, q, p);\r\n    m = ss;\r\n \r\n    while (1) {\r\n        uint i = 0u, zz = t;\r\n        uint b = c, e;\r\n        if (t == 1u) {\r\n            return makeSolution(r, p - r, 1u);\r\n        }\r\n        while (zz != 1u && i < (m - 1u)) {\r\n            zz = zz * zz % p;\r\n            i++;\r\n        }\r\n        e = m - i - 1u;\r\n        while (e > 0u) {\r\n            b = b * b % p;\r\n            e--;\r\n        }\r\n        r = r * b % p;\r\n        c = b * b % p;\r\n        t = t * c % p;\r\n        m = i;\r\n    }\r\n}\r\n\r\nts(1030u, 10009u);","script":true}